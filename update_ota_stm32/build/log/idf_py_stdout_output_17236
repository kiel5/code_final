[1/13] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\kien\Downloads\esp32\update_ota_stm32\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/kien/Downloads/esp32/update_ota_stm32/build/bootloader/bootloader.bin"
Bootloader binary size 0x6710 bytes. 0x8f0 bytes (8%) free.
[2/11] Building C object esp-idf/min_protocol/CMakeFiles/__idf_min_protocol.dir/min_port.c.obj
[3/11] Linking C static library esp-idf\min_protocol\libmin_protocol.a
[4/11] Linking C static library esp-idf\ota_command\libota_command.a
[5/11] Linking C static library esp-idf\main\libmain.a
[6/11] Generating ld/sections.ld
[7/11] Building ASM object CMakeFiles/update_ota_stm32.elf.dir/index.html.S.obj
[8/11] Building C object CMakeFiles/update_ota_stm32.elf.dir/project_elf_src_esp32.c.obj
[9/11] Linking CXX executable update_ota_stm32.elf
[10/11] Generating binary image from built executable
esptool.py v4.4
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated C:/Users/kien/Downloads/esp32/update_ota_stm32/build/update_ota_stm32.bin
[11/11] cmd.exe /C "cd /D C:\Users\kien\Downloads\esp32\update_ota_stm32\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/kien/Downloads/esp32/update_ota_stm32/build/partition_table/partition-table.bin C:/Users/kien/Downloads/esp32/update_ota_stm32/build/update_ota_stm32.bin"
update_ota_stm32.bin binary size 0xc6110 bytes. Smallest app partition is 0x100000 bytes. 0x39ef0 bytes (23%) free.
