[1/12] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\kien\Downloads\esp32\update_ota_stm32\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/kien/Downloads/esp32/update_ota_stm32/build/bootloader/bootloader.bin"
Bootloader binary size 0x6710 bytes. 0x8f0 bytes (8%) free.
[2/10] Building C object esp-idf/uart_esp/CMakeFiles/__idf_uart_esp.dir/uart_esp.c.obj
[3/10] Building C object esp-idf/ota_command/CMakeFiles/__idf_ota_command.dir/bootloader_command.c.obj
[4/10] Linking C static library esp-idf\uart_esp\libuart_esp.a
[5/10] Linking C static library esp-idf\ota_command\libota_command.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable update_ota_stm32.elf
[8/10] Generating binary image from built executable
esptool.py v4.4
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Users/kien/Downloads/esp32/update_ota_stm32/build/update_ota_stm32.bin
[9/10] cmd.exe /C "cd /D C:\Users\kien\Downloads\esp32\update_ota_stm32\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/kien/Downloads/esp32/update_ota_stm32/build/partition_table/partition-table.bin C:/Users/kien/Downloads/esp32/update_ota_stm32/build/update_ota_stm32.bin"
update_ota_stm32.bin binary size 0x4c340 bytes. Smallest app partition is 0x100000 bytes. 0xb3cc0 bytes (70%) free.
[9/10] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.0\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.0 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.0_py3.8_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.0/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Users/kien/Downloads/esp32/update_ota_stm32/build -P C:/Espressif/frameworks/esp-idf-v5.0/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM4 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 update_ota_stm32.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.4
Serial port COM4
Connecting............
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: e0:5a:1b:76:a1:9c
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0005cfff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26384 bytes to 16423...
Writing at 0x00001000... (50 %)
Writing at 0x000076f2... (100 %)
Wrote 26384 bytes (16423 compressed) at 0x00001000 in 0.8 seconds (effective 281.3 kbit/s)...
Hash of data verified.
Compressed 312128 bytes to 178798...
Writing at 0x00010000... (9 %)
Writing at 0x0001c88a... (18 %)
Writing at 0x00024673... (27 %)
Writing at 0x0002a4cd... (36 %)
Writing at 0x0002f9ed... (45 %)
Writing at 0x00034e57... (54 %)
Writing at 0x0003a64b... (63 %)
Writing at 0x00040000... (72 %)
Writing at 0x000489d7... (81 %)
Writing at 0x0005112c... (90 %)
Writing at 0x00056b71... (100 %)
Wrote 312128 bytes (178798 compressed) at 0x00010000 in 4.2 seconds (effective 594.0 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 523.8 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
