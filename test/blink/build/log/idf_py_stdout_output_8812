[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\kien\Downloads\esp32\blink\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/kien/Downloads/esp32/blink/build/bootloader/bootloader.bin"
Bootloader binary size 0x6710 bytes. 0x8f0 bytes (8%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/blink_example_main.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable blink.elf
[6/8] Generating binary image from built executable
esptool.py v4.4
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Users/kien/Downloads/esp32/blink/build/blink.bin
[7/8] cmd.exe /C "cd /D C:\Users\kien\Downloads\esp32\blink\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/kien/Downloads/esp32/blink/build/partition_table/partition-table.bin C:/Users/kien/Downloads/esp32/blink/build/blink.bin"
blink.bin binary size 0x32a20 bytes. Smallest app partition is 0x100000 bytes. 0xcd5e0 bytes (80%) free.
[7/8] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.0\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.0 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.0_py3.8_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.0/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Users/kien/Downloads/esp32/blink/build -P C:/Espressif/frameworks/esp-idf-v5.0/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM4 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x10000 blink.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.4
Serial port COM4
Connecting......
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: e0:5a:1b:76:a1:9c
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00042fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26384 bytes to 16425...
Writing at 0x00001000... (50 %)
Writing at 0x000076f2... (100 %)
Wrote 26384 bytes (16425 compressed) at 0x00001000 in 0.8 seconds (effective 280.8 kbit/s)...
Hash of data verified.
Compressed 207392 bytes to 113180...
Writing at 0x00010000... (14 %)
Writing at 0x0001b71c... (28 %)
Writing at 0x00020fd7... (42 %)
Writing at 0x000267d6... (57 %)
Writing at 0x0002ca8f... (71 %)
Writing at 0x00034e4d... (85 %)
Writing at 0x0003d441... (100 %)
Wrote 207392 bytes (113180 compressed) at 0x00010000 in 2.7 seconds (effective 622.6 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 431.5 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
